Lisp4c
_____________________________________________________
SOMMAIRE

1 GENERALITES
1.1 FICHE  TECHNIQUE
1.2 BUT DU PROGRAMME
1.3 RESPONSABILITES

2 LES PRINCIPALES FONCTIONS	

3 VERSION 1.1
3.1 BUT DE L'EVOLUTION
3.2 DETAIL DES MODIFICATIONS	

_____________________________________________________
GENERALITES

FICHE  TECHNIQUE
  Titre		: lisp4c
  Version	: 1.1
  Description	: Bibliotheque de fonctions lisp en C
  Langage	: C
  Date sortie	: 12/03/2001

BUT DU PROGRAMME 
  Cette bibliotheque permet de gerer des listes a la 
  maniere du lisp. Elle est necessaire pour le
  developpement de Alexia.

RESPONSABILITES
  Etude 	: Philippe BOUSQUET
  Developpement	: Philippe BOUSQUET
  Tests		: Philippe BOUSQUET

_____________________________________________________
LES PRINCIPALES FONCTIONS

Voici un recapitulatif des differentes fonctions 
disponibles: 

IsAtom (X)
  Renvoie vraie si X est une donnee atomique	
  IsAtom ('toto') => 1

IsListe (L)
  Renvoie vraie si L est une donnee liste
  IsList ('(a b c)') => 1

Car (L)	
  Renvoi le premier element d'une liste	
  Car ('(a b c)') => 'a'

Cdr (L)	
  Renvoi la partie de droite d'une liste
  Cdr ('(a b c)') => '(b c)'

List (X)
  Transforme une donnee en donnee liste	
  List ('toto') => '(toto)'

Append (L, X)
  Ajoute un element a une liste	
  Append ('(a b)', 'c') => '(a b c)'

Merge (L1, L2)
  Fusionne deux listes	
  Merge ('(a b)', '(c d)') => '(a b c d)'

Cons (E1, E2)
  Cree une liste a deux éléments
  Cons ('a', '(b c)') => '(a (b c))'

LstLength (L)
  Renvoie le nombre d'elements d'une liste
  LstLength ('(a b c)') => 3

LstFind (E, L)
  Renvoie vrai si E est present dans la liste
  LstFind ('a', '(a b c)') => 1

LstDel (E, L)
  Supprime l'element de la liste
  LstDel ('a', '(a b c a)') => '(b c a)'

LstDelAll (E, L)
  Supprime toutes les ocurences de E dans L
  LstDel ('a', '(a b c a)') => '(b c)'

Intersect (L1, L2)
  Cree l'intersection de deux listes
  Intersec ('(a b c)', '(b c d)') => '(b c)'

InvIntersect (L1, L2)
  Fonction inverse de Intersect
  InvIntersec ('(a b c)', '(b c d)') => '(a d)'

Union (L1, L2)
  Cree l'union de deux Listes
  Union ('(a b c)', '(b c d)') => '(a b c d)'

Assoc (E, L)
  Renvoi la paire ayant pour element gauche E
  Assoc ('a', '((a 1) (b 2) (c 3))') => '(a 1)'

Rssoc (E, L)
  Renvoi la paire ayant pour element droit E
  Rssoc ('2', '((a 1) (b 2) (c 3))') => '(b 2)'	

_____________________________________________________
VERSION 1.1

BUT DE L'EVOLUTION
  Amelioration de traitement des chaines de caracteres,
  ainsi que meilleure gestion de la memoire.

DETAIL DES MODIFICATIONS
  Remplacer lorsque cela est possible les tableaux de 
  caracteres par des pointeurs.

_____________________________________________________
Par Philippe BOUSQUET